{
    "project": {
        "name": "VecmathJS",
        "description": "Vector math library for javascript",
        "version": "1.0.0"
    },
    "files": {
        "src/mat4.js": {
            "name": "src/mat4.js",
            "modules": {},
            "classes": {
                "Mat4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/quat.js": {
            "name": "src/quat.js",
            "modules": {},
            "classes": {
                "Quat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/vec2.js": {
            "name": "src/vec2.js",
            "modules": {},
            "classes": {
                "Vec2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/vec3.js": {
            "name": "src/vec3.js",
            "modules": {},
            "classes": {
                "Vec3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/vec4.js": {
            "name": "src/vec4.js",
            "modules": {},
            "classes": {
                "Vec4": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Mat4": {
            "name": "Mat4",
            "shortname": "Mat4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/mat4.js",
            "line": 32,
            "description": "Describes a 4x4 matrix.",
            "is_constructor": 1,
            "mainName": "Mat4",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "params": [
                {
                    "name": "data",
                    "description": "The data array that holds all matrix values. Assumed to have a length of 16.",
                    "type": "Float32Array",
                    "optional": true
                }
            ]
        },
        "Quat": {
            "name": "Quat",
            "shortname": "Quat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/quat.js",
            "line": 4,
            "description": "Describes a quaternion.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "value for X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "value for Y component",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "value for Z component",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "value for W component",
                    "type": "Number"
                }
            ]
        },
        "Vec2": {
            "name": "Vec2",
            "shortname": "Vec2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/vec2.js",
            "line": 4,
            "description": "Describes a vector with two components.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Vec3": {
            "name": "Vec3",
            "shortname": "Vec3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/vec3.js",
            "line": 4,
            "description": "Describes a vector with three components.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Vec4": {
            "name": "Vec4",
            "shortname": "Vec4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/vec4.js",
            "line": 4,
            "description": "Describes a vector with four components.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/mat4.js",
            "line": 1,
            "description": "Some content here",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 40,
            "itemtype": "attribute",
            "name": "data",
            "type": "{Float32Array}",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 45,
            "itemtype": "attribute",
            "name": "right",
            "type": "{Float32Array}",
            "description": "This is a subarray of the `data` attribute",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 51,
            "itemtype": "attribute",
            "name": "up",
            "type": "{Float32Array}",
            "description": "This is a subarray of the `data` attribute",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 57,
            "itemtype": "attribute",
            "name": "backward",
            "type": "{Float32Array}",
            "description": "This is a subarray of the `data` attribute",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 63,
            "itemtype": "attribute",
            "name": "translation",
            "type": "{Float32Array}",
            "description": "This is a subarray of the `data` attribute",
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 75,
            "description": "Initializes the matrix with the given values in given order. The values are applied in column major order",
            "itemtype": "method",
            "name": "init",
            "chainable": 1,
            "params": [
                {
                    "name": "m0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m3",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m4",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m5",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m6",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m7",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m8",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m9",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m10",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m12",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m13",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m14",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m15",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "example": [
                "\n\n    mat.init(\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      x, y, z, 0)"
            ],
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 125,
            "description": "Initializes the matrix with the given values. The values are read in row major order.",
            "itemtype": "method",
            "name": "initRowMajor",
            "chainable": 1,
            "params": [
                {
                    "name": "m0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m4",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m8",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m12",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m5",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m9",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m13",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m6",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m10",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m14",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m3",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m7",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m11",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "m15",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 168,
            "description": "Initializes all components of this matrix with the given number.",
            "itemtype": "method",
            "name": "initWith",
            "chainable": 1,
            "params": [
                {
                    "name": "number",
                    "description": "The number to set all matrix components to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 181,
            "description": "Initializes the components of this matrix to the identity.",
            "itemtype": "method",
            "name": "initIdentity",
            "chainable": 1,
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 194,
            "description": "Initializes this matrix from another matrix.",
            "itemtype": "method",
            "name": "initFrom",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 223,
            "description": "Reads a buffer starting at given offset and initializes the elements of this matrix.\nThe given buffer must have at least 16 elements starting at given offset.\nThe elements are expected to be in column major layout.",
            "itemtype": "method",
            "name": "initFromBuffer",
            "chainable": 1,
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 255,
            "description": "Initializes this matrix from given quaternion.",
            "itemtype": "method",
            "name": "initFromQuaternion",
            "chainable": 1,
            "params": [
                {
                    "name": "q",
                    "description": "The quaternion",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 284,
            "description": "Initializes this matrix to a rotation matrix defined by given axis vector and angle.",
            "itemtype": "method",
            "name": "initAxisAngle",
            "chainable": 1,
            "params": [
                {
                    "name": "axis",
                    "description": "The axis vector. This is expected to be normalized.",
                    "type": "Vec3"
                },
                {
                    "name": "angle",
                    "description": "The angle in radians.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 320,
            "description": "Initializes this matrix to a rotation matrix defined by given yaw pitch and roll values.",
            "itemtype": "method",
            "name": "initYawPitchRoll",
            "chainable": 1,
            "params": [
                {
                    "name": "yaw",
                    "description": "Angle in radians around the Y axis",
                    "type": "Number"
                },
                {
                    "name": "pitch",
                    "description": "Angle in radians around the X axis",
                    "type": "Number"
                },
                {
                    "name": "roll",
                    "description": "Angle in radians around the Z axis",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 366,
            "description": "Initializes this matrix with a rotation around the X axis.",
            "itemtype": "method",
            "name": "initRotationX",
            "chainable": 1,
            "params": [
                {
                    "name": "rad",
                    "description": "The angle in radians.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 384,
            "description": "Initializes this matrix with a rotation around the Y axis.",
            "itemtype": "method",
            "name": "initRotationY",
            "chainable": 1,
            "params": [
                {
                    "name": "rad",
                    "description": "The angle in radians."
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 403,
            "description": "Initializes this matrix with a rotation around the Z axis.",
            "itemtype": "method",
            "name": "initRotationZ",
            "chainable": 1,
            "params": [
                {
                    "name": "rad",
                    "description": "The angle in radians."
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 422,
            "description": "Initializes a translation matrix.",
            "itemtype": "method",
            "name": "initTranslation",
            "chainable": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Translation along the x-axis",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Translation along the y-axis",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Translation along the z-axis",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 440,
            "description": "Initializes a scale matrix.",
            "itemtype": "method",
            "name": "initScale",
            "chainable": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Scale along x-axis",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Scale along y-axis",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Scale along z-axis",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 458,
            "description": "Initializes a rotation matrix by using a position and a lookat point.",
            "itemtype": "method",
            "name": "initLookAt",
            "chainable": 1,
            "params": [
                {
                    "name": "pos",
                    "description": "The position where the viewer stands",
                    "type": "Vec3"
                },
                {
                    "name": "lookAt",
                    "description": "The position where the viewer is looking to",
                    "type": "Vec3"
                },
                {
                    "name": "up",
                    "description": "The up vector of the viewer",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 503,
            "description": "Initializes a matrix from a position point and a forward and up vectors",
            "itemtype": "method",
            "name": "initWorld",
            "chainable": 1,
            "params": [
                {
                    "name": "position",
                    "description": "The translation part",
                    "type": "Vec3|Vec4"
                },
                {
                    "name": "forward",
                    "description": "The facing direction",
                    "type": "Vec3|Vec4"
                },
                {
                    "name": "up",
                    "description": "The up vector",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 546,
            "description": "Initializes a perspective matrix with given field of view angle",
            "itemtype": "method",
            "name": "initPerspectiveFieldOfView",
            "chainable": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "The field of view angle in radians",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "The aspect ratio",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "The near plane distance",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "The far plane distance",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 567,
            "description": "Initializes a perspective matrix",
            "itemtype": "method",
            "name": "initPerspective",
            "chainable": 1,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "The near plane distance",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "The far plane distance",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 586,
            "description": "Initializes a perspective matrix",
            "itemtype": "method",
            "name": "initPerspectiveOffCenter",
            "chainable": 1,
            "params": [
                {
                    "name": "left",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "The near plane distance",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "The far plane distance",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 607,
            "description": "Initializes an orthographic matrix",
            "itemtype": "method",
            "name": "initOrthographic",
            "chainable": 1,
            "params": [
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": "The near plane distance",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "The far plane distance",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 626,
            "description": "Initializes an orthographic matrix",
            "itemtype": "method",
            "name": "initOrthographicOffCenter",
            "chainable": 1,
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "right",
                    "description": ""
                },
                {
                    "name": "bottom",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": "The near plane distance",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "The far plane distance",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 648,
            "description": "Creates a copy of this matrix",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The cloned matrix.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 658,
            "description": "Copies the components successively into the given array.",
            "chainable": 1,
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to copy into",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "Zero based index where to start writing in the array",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 688,
            "description": "Returns an array filled with the values of the components of this vector",
            "itemtype": "method",
            "name": "dump",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 699,
            "description": "Checks for component wise equality with given matrix",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The matrix to compare with",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "true if components are equal, false otherwise",
                "type": "Boolean"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 726,
            "description": "Gets the forward vector",
            "itemtype": "method",
            "name": "getForward",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 740,
            "description": "Gets the backward vector",
            "itemtype": "method",
            "name": "getBackward",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 754,
            "description": "Gets the right vector",
            "itemtype": "method",
            "name": "getRight",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 768,
            "description": "Gets the left vector",
            "itemtype": "method",
            "name": "getLeft",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 782,
            "description": "Gets the up vector",
            "itemtype": "method",
            "name": "getUp",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 795,
            "description": "Gets the down vector",
            "itemtype": "method",
            "name": "getDown",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 809,
            "description": "Gets the translation part as vector",
            "itemtype": "method",
            "name": "getTranslation",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 823,
            "description": "Gets the scale part as vector",
            "itemtype": "method",
            "name": "getScale",
            "params": [
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "the given `out` parameter or a new vector",
                "type": "Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 837,
            "description": "Writes the values of the forward vector into an array",
            "itemtype": "method",
            "name": "copyForward",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 850,
            "description": "Writes the values of the backward vector into an array",
            "itemtype": "method",
            "name": "copyBackward",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 863,
            "description": "Writes the values of the right vector into an array",
            "itemtype": "method",
            "name": "copyRight",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 876,
            "description": "Writes the values of the left vector into an array",
            "itemtype": "method",
            "name": "copyLeft",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 889,
            "description": "Writes the values of the up vector into an array",
            "itemtype": "method",
            "name": "copyUp",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 902,
            "description": "Writes the values of the down vector into an array",
            "itemtype": "method",
            "name": "copyDown",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 915,
            "description": "Writes the values of the translation part into an array",
            "itemtype": "method",
            "name": "copyTranslation",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 928,
            "description": "Writes the values of the scale vector into an array",
            "itemtype": "method",
            "name": "copyScale",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to write to",
                    "type": "Array|Float32Array"
                }
            ],
            "return": {
                "description": "the given `buffer` parameter",
                "type": "Array|Float32Array"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 941,
            "description": "Sets the forward vector",
            "itemtype": "method",
            "name": "setForward",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 955,
            "description": "Sets the backward vector",
            "itemtype": "method",
            "name": "setBackward",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 969,
            "description": "Sets the right vector",
            "itemtype": "method",
            "name": "setRight",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 983,
            "description": "Sets the left vector",
            "itemtype": "method",
            "name": "setLeft",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 997,
            "description": "Sets the up vector",
            "itemtype": "method",
            "name": "setUp",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1011,
            "description": "Sets the down vector",
            "itemtype": "method",
            "name": "setDown",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1025,
            "description": "Sets the translation part",
            "itemtype": "method",
            "name": "setTranslation",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1039,
            "description": "Sets the scale part",
            "itemtype": "method",
            "name": "setScale",
            "chainable": 1,
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to take values from",
                    "type": "Vec3|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1053,
            "description": "Calculates the determinant of this matrix",
            "itemtype": "method",
            "name": "determinant",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1098,
            "description": "Transposes this matrix",
            "itemtype": "method",
            "name": "selfTranspose",
            "chainable": 1,
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1132,
            "description": "Inverts this matrix",
            "itemtype": "method",
            "name": "selfInvert",
            "chainable": 1,
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1211,
            "description": "Negates all components of this matrix",
            "itemtype": "method",
            "name": "selfNegate",
            "chainable": 1,
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1238,
            "description": "Adds the given matrix to `this`",
            "itemtype": "method",
            "name": "selfAdd",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "The matrix to add",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1268,
            "description": "Adds the given scalar to each component of `this`",
            "itemtype": "method",
            "name": "selfAddScalar",
            "chainable": 1,
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to add",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1296,
            "description": "Subtracts the given matrix from `this`",
            "itemtype": "method",
            "name": "selfSubtract",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "The matrix to subtract",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1327,
            "description": "Subtracts the given scalar from each component of `this`",
            "itemtype": "method",
            "name": "selfSubtractScalar",
            "chainable": 1,
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to subtract",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1356,
            "description": "Multiplies the given matrix with this",
            "itemtype": "method",
            "name": "selfMultiply",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "The matrix to multiply",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1422,
            "description": "Concatenates the given matrix to this",
            "itemtype": "method",
            "name": "selfConcat",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "The matrix to concatenate",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1488,
            "description": "Multiplies each component of `this` with given scalar",
            "itemtype": "method",
            "name": "selfMultiplyScalar",
            "chainable": 1,
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to multiply",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1517,
            "description": "Divides each matching component pair",
            "itemtype": "method",
            "name": "selfDivide",
            "chainable": 1,
            "params": [
                {
                    "name": "other",
                    "description": "The matrix by which to divide",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1546,
            "description": "Divides each component of `this` by given scalar",
            "itemtype": "method",
            "name": "selfDivideScalar",
            "chainable": 1,
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar by which to divide",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1575,
            "description": "Transform the given vector with this matrix.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "vec",
                    "description": "",
                    "type": "Vec2|Vec3|Vec4"
                }
            ],
            "return": {
                "description": "the given vector",
                "type": "Vec2|Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1599,
            "description": "Rotates and scales the given vector with this matrix.",
            "itemtype": "method",
            "name": "transformNormal",
            "params": [
                {
                    "name": "vec",
                    "description": "",
                    "type": "Vec2|Vec3|Vec4"
                }
            ],
            "return": {
                "description": "the given vector",
                "type": "Vec2|Vec3|Vec4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1618,
            "description": "Transforms the given buffer with `this` matrix.",
            "itemtype": "method",
            "name": "transformV2Buffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stride",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "2"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "buffer.length"
                }
            ],
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1641,
            "description": "Transforms the given buffer with `this` matrix.",
            "itemtype": "method",
            "name": "transformV3Buffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stride",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "3"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "buffer.length"
                }
            ],
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1666,
            "description": "Transforms the given buffer with `this` matrix.",
            "itemtype": "method",
            "name": "transformV4Buffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stride",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "buffer.length"
                }
            ],
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1693,
            "description": "Transforms the given buffer with the rotation and scale part of `this` matrix.",
            "itemtype": "method",
            "name": "transformNormalBuffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stride",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "3"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "buffer.length"
                }
            ],
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1719,
            "description": "Transpose the given matrix",
            "static": 1,
            "itemtype": "method",
            "name": "transpose",
            "params": [
                {
                    "name": "mat",
                    "description": "The matrix to transpose",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1737,
            "description": "Invert the given matrix",
            "static": 1,
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "mat",
                    "description": "The matrix to transpose",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1821,
            "description": "Negate the components of the given matrix",
            "static": 1,
            "itemtype": "method",
            "name": "negate",
            "params": [
                {
                    "name": "mat",
                    "description": "The matrix to transpose",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1853,
            "description": "Adds a matrix to another",
            "static": 1,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1887,
            "description": "Adds a scalar to each component of a matrix",
            "static": 1,
            "itemtype": "method",
            "name": "addScalar",
            "params": [
                {
                    "name": "mat",
                    "description": "The matrix",
                    "type": "Mat4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1920,
            "description": "Subtracts the second matrix from the first",
            "static": 1,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1954,
            "description": "Subtracts a scalar from each somponent of a matrix",
            "static": 1,
            "itemtype": "method",
            "name": "subtractScalar",
            "params": [
                {
                    "name": "mat",
                    "description": "The matrix to subtract from",
                    "type": "Mat4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to subtract",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 1987,
            "description": "Multiplies a matrix by another matrix",
            "static": 1,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2056,
            "description": "Multiplies a matrix by another matrix",
            "static": 1,
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2124,
            "description": "Multiplies a chain of matrices",
            "static": 1,
            "itemtype": "method",
            "name": "concatChain",
            "return": {
                "description": "The result of the multiplication",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2138,
            "description": "Multiplies a chain of matrices",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyChain",
            "return": {
                "description": "The result of the multiplication",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2152,
            "description": "Multiplies a matrix with a scalar value",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyScalar",
            "params": [
                {
                    "name": "matA",
                    "description": "The matrix",
                    "type": "Mat4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to multiply",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2185,
            "description": "Divides the components of the first matrix by the components of the second matrix",
            "static": 1,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2218,
            "description": "Divides the components of a matrix by a scalar",
            "static": 1,
            "itemtype": "method",
            "name": "divideScalar",
            "params": [
                {
                    "name": "matA",
                    "description": "The matrix",
                    "type": "Mat4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar by which to divide",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2251,
            "description": "Performs a linear interpolation between two matrices",
            "static": 1,
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "matA",
                    "description": "The first matrix",
                    "type": "Mat4"
                },
                {
                    "name": "matB",
                    "description": "The second matrix",
                    "type": "Mat4"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. This is assumed to be in [0:1] range",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The matrix to write to",
                    "type": "Mat4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2285,
            "description": "Creates a new matrix with all components set to 0",
            "static": 1,
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2295,
            "description": "Creates a new matrix that is initialized to identity",
            "static": 1,
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2308,
            "description": "Creates a new matrix. This method should be called with 16 or 0 arguments. If less than 16 but more than 0 arguments\nare given some components are going to be undefined. The arguments are expected to be in column major order.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "m0",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m1",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m2",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m3",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m4",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m5",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m6",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m7",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m8",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m9",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m10",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m11",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m12",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m13",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m14",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "m15",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2355,
            "description": "Creates a new matrix. The arguments are expected to be in row major order.",
            "static": 1,
            "itemtype": "method",
            "name": "createRowMajor",
            "params": [
                {
                    "name": "m0",
                    "description": ""
                },
                {
                    "name": "m4",
                    "description": ""
                },
                {
                    "name": "m8",
                    "description": ""
                },
                {
                    "name": "m12",
                    "description": ""
                },
                {
                    "name": "m1",
                    "description": ""
                },
                {
                    "name": "m5",
                    "description": ""
                },
                {
                    "name": "m9",
                    "description": ""
                },
                {
                    "name": "m13",
                    "description": ""
                },
                {
                    "name": "m2",
                    "description": ""
                },
                {
                    "name": "m6",
                    "description": ""
                },
                {
                    "name": "m10",
                    "description": ""
                },
                {
                    "name": "m14",
                    "description": ""
                },
                {
                    "name": "m3",
                    "description": ""
                },
                {
                    "name": "m7",
                    "description": ""
                },
                {
                    "name": "m11",
                    "description": ""
                },
                {
                    "name": "m15",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2399,
            "static": 1,
            "itemtype": "method",
            "name": "createScale",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2411,
            "static": 1,
            "itemtype": "method",
            "name": "createTranslation",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2423,
            "static": 1,
            "itemtype": "method",
            "name": "createLookAt",
            "params": [
                {
                    "name": "pos",
                    "description": ""
                },
                {
                    "name": "lookAt",
                    "description": ""
                },
                {
                    "name": "up",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2435,
            "static": 1,
            "itemtype": "method",
            "name": "createWorld",
            "params": [
                {
                    "name": "position",
                    "description": ""
                },
                {
                    "name": "forward",
                    "description": ""
                },
                {
                    "name": "up",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2447,
            "static": 1,
            "itemtype": "method",
            "name": "createPerspectiveFieldOfView",
            "params": [
                {
                    "name": "fov",
                    "description": ""
                },
                {
                    "name": "aspec",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": ""
                },
                {
                    "name": "far",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2460,
            "static": 1,
            "itemtype": "method",
            "name": "createPerspective",
            "params": [
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": ""
                },
                {
                    "name": "far",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2473,
            "static": 1,
            "itemtype": "method",
            "name": "createPerspectiveOffCenter",
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "right",
                    "description": ""
                },
                {
                    "name": "bottom",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": ""
                },
                {
                    "name": "far",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2488,
            "static": 1,
            "itemtype": "method",
            "name": "createOrthographic",
            "params": [
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": ""
                },
                {
                    "name": "far",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2501,
            "static": 1,
            "itemtype": "method",
            "name": "createOrthographicOffCenter",
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "right",
                    "description": ""
                },
                {
                    "name": "bottom",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                },
                {
                    "name": "near",
                    "description": ""
                },
                {
                    "name": "far",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2516,
            "static": 1,
            "itemtype": "method",
            "name": "createRotationX",
            "params": [
                {
                    "name": "rad",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2526,
            "static": 1,
            "itemtype": "method",
            "name": "createRotationY",
            "params": [
                {
                    "name": "rad",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2536,
            "static": 1,
            "itemtype": "method",
            "name": "createRotationZ",
            "params": [
                {
                    "name": "rad",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2546,
            "static": 1,
            "itemtype": "method",
            "name": "createAxisAngle",
            "params": [
                {
                    "name": "axis",
                    "description": ""
                },
                {
                    "name": "angle",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2557,
            "static": 1,
            "itemtype": "method",
            "name": "createYawPitchRoll",
            "params": [
                {
                    "name": "yaw",
                    "description": ""
                },
                {
                    "name": "pitch",
                    "description": ""
                },
                {
                    "name": "roll",
                    "description": ""
                }
            ],
            "return": {
                "description": "a new matrix",
                "type": "Mat4"
            },
            "class": "Mat4"
        },
        {
            "file": "src/mat4.js",
            "line": 2569,
            "static": 1,
            "itemtype": "method",
            "name": "prettyString",
            "params": [
                {
                    "name": "mat",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Mat4"
        },
        {
            "file": "src/quat.js",
            "line": 14,
            "itemtype": "attribute",
            "name": "x",
            "type": "{Number}",
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "y",
            "type": "{Number}",
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 24,
            "itemtype": "attribute",
            "name": "z",
            "type": "{Number}",
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 29,
            "itemtype": "attribute",
            "name": "w",
            "type": "{Number}",
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 39,
            "description": "Initializes components of the quaternion with given values.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "value for X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "value for Y component",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "value for Z component",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "value for W component",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 56,
            "description": "Initializes the quaternion with `x`, `y` and `z` components set to `0` and `w` component set to `1`.",
            "itemtype": "method",
            "name": "initIdentity",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 69,
            "description": "Initializes the quaternion with all components set to `0`.",
            "itemtype": "method",
            "name": "initZero",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 82,
            "description": "Initializes the components of this quaternion by taking the components from the given quaternion or vector.",
            "itemtype": "method",
            "name": "initFrom",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 96,
            "description": "Initializes the components of this quaternion by taking values from the given array in successive order.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFromBuffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to read from",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The zero based index at which start reading the values",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 113,
            "description": "Initializes the quaternion from axis and an angle.",
            "itemtype": "method",
            "name": "initAxisAngle",
            "params": [
                {
                    "name": "axis",
                    "description": "The axis as vector",
                    "type": "Vec3"
                },
                {
                    "name": "angle",
                    "description": "The angle in degrees",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 130,
            "description": "Initializes the quaternion from yaw pitch and roll angles.",
            "itemtype": "method",
            "name": "initYawPitchRoll",
            "params": [
                {
                    "name": "yaw",
                    "description": "The yaw angle in radians",
                    "type": "Number"
                },
                {
                    "name": "pitch",
                    "description": "The pitch angle in radians",
                    "type": "Number"
                },
                {
                    "name": "roll",
                    "description": "The roll angle in radians",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 158,
            "description": "Creates a copy of this quaternion",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The cloned quaternion",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 167,
            "description": "Copies the components successively into the given array.",
            "chainable": 1,
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to copy into",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "Zero based index where to start writing in the array",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|Float32Array"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 183,
            "description": "Returns an array filled with the values of the components of this quaternion",
            "itemtype": "method",
            "name": "dump",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 192,
            "description": "Checks for component wise equality with given quaternion",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The quaternion to compare with",
                    "type": "Quat|Vec4"
                }
            ],
            "return": {
                "description": "true if components are equal, false otherwise",
                "type": "Boolean"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 202,
            "description": "Calculates the length of this quaternion",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length.",
                "type": "Number"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 215,
            "description": "Calculates the squared length of this quaternion",
            "itemtype": "method",
            "name": "lengthSquared",
            "return": {
                "description": "The squared length.",
                "type": "Number"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 228,
            "description": "Calculates the dot product with the given quaternion",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "The dot product.",
                "type": "Number"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 238,
            "description": "Negates the components of `this`",
            "itemtype": "method",
            "name": "selfNegate",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 251,
            "description": "Negates the `x`, `y` and `z` components of `this`",
            "itemtype": "method",
            "name": "selfConjugate",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 263,
            "description": "Normalizes `this` so that `length` should be `1`",
            "itemtype": "method",
            "name": "selfNormalize",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 281,
            "description": "Inverts `this` so that multiplication with the original would return the identity quaternion.",
            "itemtype": "method",
            "name": "selfInvert",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 299,
            "description": "Performs a component wise addition with `other`",
            "itemtype": "method",
            "name": "selfAdd",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 313,
            "description": "Performs a component wise subtraction with `other`",
            "itemtype": "method",
            "name": "selfSubtract",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 327,
            "description": "Performs a quaternion multiplication with `other`",
            "itemtype": "method",
            "name": "selfMultiply",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat|Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 351,
            "description": "Performs a quaternion concatenation with `other`",
            "itemtype": "method",
            "name": "selfConcat",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 375,
            "description": "Performs a division with `other`",
            "itemtype": "method",
            "name": "selfDivide",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 406,
            "description": "Rotates the given point or vector with `this`",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "vec",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Vec3|Vec4"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 445,
            "description": "Creates a new quaternion. The method should be called with four or no arguments. If less than four arguments are given\nthen some components of the resulting quaternion are going to be `undefined`.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "x",
                    "description": "The x component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "y",
                    "description": "The y component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "w",
                    "description": "The w component",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 463,
            "description": "Creates a new vector with all components set to 0.",
            "static": 1,
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "A new quaternion",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 473,
            "description": "Creates a new vector with `x`, `y` and `z` components set to `0` and `w` component set to `1`.",
            "static": 1,
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "A new quaternion",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 483,
            "description": "Creates a new quaternion from given axis vector and an angle",
            "static": 1,
            "itemtype": "method",
            "name": "fromAxisAngle",
            "params": [
                {
                    "name": "axis",
                    "description": "The axis vector",
                    "type": "Vec3"
                },
                {
                    "name": "angle",
                    "description": "The angle in degree",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A new quaternion",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 495,
            "description": "Creates a new quaternion from given `yaw` `pitch` and `roll` angles",
            "static": 1,
            "itemtype": "method",
            "name": "fromYawPitchRoll",
            "params": [
                {
                    "name": "yaw",
                    "description": "The yaw angle in radians",
                    "type": "Number"
                },
                {
                    "name": "pitch",
                    "description": "The pitch angle in radians",
                    "type": "Number"
                },
                {
                    "name": "roll",
                    "description": "The roll angle in radians",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 508,
            "description": "Negates the given quaternion.",
            "static": 1,
            "itemtype": "method",
            "name": "negate",
            "params": [
                {
                    "name": "quat",
                    "description": "The quaternion to negate.",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 525,
            "description": "Conjugates the given quaternion.",
            "static": 1,
            "itemtype": "method",
            "name": "conjugate",
            "params": [
                {
                    "name": "quat",
                    "description": "The quaternion to conjugate.",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 542,
            "description": "Normalizes the given quaternion",
            "static": 1,
            "itemtype": "method",
            "name": "normalize",
            "params": [
                {
                    "name": "quat",
                    "description": "The quaternion to normalize.",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 564,
            "description": "Inverts the given quaternion",
            "static": 1,
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "quat",
                    "description": "The quaternion to invert.",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 586,
            "description": "Adds two quaternions",
            "static": 1,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "quatA",
                    "description": "The first quaternion",
                    "type": "Quat"
                },
                {
                    "name": "quatB",
                    "description": "The second quaternion",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 604,
            "description": "Subtracts the second quaternion from the first.",
            "static": 1,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "quatA",
                    "description": "The first quaternion",
                    "type": "Quat"
                },
                {
                    "name": "quatB",
                    "description": "The second quaternion",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 622,
            "description": "Multiplies two quaternions",
            "static": 1,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "quatA",
                    "description": "The first quaternion",
                    "type": "Quat"
                },
                {
                    "name": "quatB",
                    "description": "The second quaternion",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 651,
            "description": "Concatenates two quaternions",
            "static": 1,
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "quatA",
                    "description": "The first quaternion",
                    "type": "Quat"
                },
                {
                    "name": "quatB",
                    "description": "The second quaternion",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 679,
            "description": "Divides the first quaternion by the second",
            "static": 1,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "quatA",
                    "description": "The first quaternion",
                    "type": "Quat"
                },
                {
                    "name": "quatB",
                    "description": "The second quaternion",
                    "type": "Quat"
                },
                {
                    "name": "out",
                    "description": "The quaternion to write to.",
                    "type": "Quat",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 715,
            "description": "Tries to convert the given `data` into a quaternion",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array|Quat|Vec4"
                }
            ],
            "return": {
                "description": "The created quaternion.",
                "type": "Quat"
            },
            "class": "Quat"
        },
        {
            "file": "src/quat.js",
            "line": 742,
            "description": "Rotates a point or vector with given quaternion",
            "static": 1,
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "q",
                    "description": "The rotation quaternion",
                    "type": "Quat"
                },
                {
                    "name": "v",
                    "description": "The point or vector to rotate",
                    "type": "Vec3|Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to",
                    "type": "Vec3|Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3|Vec4"
            },
            "class": "Quat"
        },
        {
            "file": "src/vec2.js",
            "line": 21,
            "description": "Initializes the components of this vector with given values.",
            "chainable": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "value for X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "value for Y component",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "this vector for chaining",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 30,
            "itemtype": "attribute",
            "name": "x",
            "type": "{Number}",
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 35,
            "itemtype": "attribute",
            "name": "y",
            "type": "{Number}",
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 43,
            "description": "Initializes the components of this vector by taking the components from the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to read from",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 56,
            "description": "Initializes the components of this vector by taking values from the given array in successive order.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFromBuffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to read from",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The zero based index at which start reading the values",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 71,
            "description": "Creates a copy of this vector",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The cloned vector",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 80,
            "description": "Copies the components successively into the given array.",
            "chainable": 1,
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to copy into",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "Zero based index where to start writing in the array",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|Float32Array"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 95,
            "description": "Returns an array filled with the values of the components of this vector",
            "itemtype": "method",
            "name": "dump",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 104,
            "description": "Checks for component wise equality with given vector",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to compare with",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "true if components are equal, false otherwise",
                "type": "Boolean"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 114,
            "description": "Calculates the length of this vector",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length.",
                "type": "Number"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 125,
            "description": "Calculates the squared length of this vector",
            "itemtype": "method",
            "name": "lengthSquared",
            "return": {
                "description": "The squared length.",
                "type": "Number"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 136,
            "description": "Calculates the distance to the given vector",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "The distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 148,
            "description": "Calculates the squared distance to the given vector",
            "itemtype": "method",
            "name": "distanceSquared",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "The squared distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 160,
            "description": "Calculates the dot product with the given vector",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "The dot product.",
                "type": "Number"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 170,
            "description": "Calculates the cross product with another vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfCross",
            "params": [
                {
                    "name": "other",
                    "description": "The second vector.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "A new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 185,
            "description": "Normalizes this vector. Applies the result to this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNormalize",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 200,
            "description": "Inverts this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfInvert",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 212,
            "description": "Negates the components of this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNegate",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 224,
            "description": "Adds the given vector to `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAdd",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to add",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 237,
            "description": "Adds the given scalar to `this`",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAddScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 250,
            "description": "Subtracts the given from this vector from `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfSubtract",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to subtract.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 263,
            "description": "Subtracts the given scalar from `this`.",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "itemtype": "method",
            "name": "selfSubtractScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to subtract.",
                    "type": "Vec2"
                }
            ],
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 276,
            "description": "Multiplies `this` with the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiply",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to multiply.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 289,
            "description": "Multiplies `this` with the given scalar.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 302,
            "description": "Divides `this` by the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfDivide",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to divide with.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 315,
            "description": "Divides `this` by the given scalar.",
            "itemtype": "method",
            "name": "selfDivideScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to divide with.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 328,
            "description": "Multiplies `this` with the first vector and adds the second after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The vector to multiply.",
                    "type": "Vec2"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 342,
            "description": "Multiplies `this` with the first vector and adds the second scalar after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalarAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 356,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat4",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 372,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat3",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 388,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat2",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 406,
            "description": "Creates a new vector. The method should be called with three or no arguments. If less than three arguments are given\nthen some components of the resulting vector are going to be `undefined`.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "x",
                    "description": "The x component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "y",
                    "description": "The y component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z component",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 423,
            "description": "Creates a new vector with all components set to 0.",
            "static": 1,
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "A new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 433,
            "description": "Creates a new vector with all components set to 1.",
            "static": 1,
            "itemtype": "method",
            "name": "one",
            "return": {
                "description": "A new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 443,
            "description": "Normalizes the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "normalize",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to normalize.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 461,
            "description": "Inverts the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to invert.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 476,
            "description": "Negates this vector.",
            "static": 1,
            "itemtype": "method",
            "name": "negate",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to negate.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 491,
            "description": "Adds two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 507,
            "description": "Adds a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "addScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 523,
            "description": "Subtracts the second vector from the first.",
            "static": 1,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 539,
            "description": "Subtracts a scalar from each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "subtractScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 555,
            "description": "Multiplies two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 571,
            "description": "Multiplies a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 587,
            "description": "Divides the components of the first vector by the components of the second vector.",
            "static": 1,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 603,
            "description": "Divides the components of the first vector by the scalar.",
            "static": 1,
            "itemtype": "method",
            "name": "divideScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to use for division.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 620,
            "description": "Multiplies two vectors and adds the third vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec2"
                },
                {
                    "name": "vecB",
                    "description": "The vector to multiply.",
                    "type": "Vec2"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 637,
            "description": "Multiplies a vector with a scalar and adds another vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec2"
                },
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 654,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec2"
                },
                {
                    "name": "min",
                    "description": "Vector with the minimum component values.",
                    "type": "Vec2"
                },
                {
                    "name": "max",
                    "description": "Vector with the maximum component values.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 677,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max scalars.",
            "static": 1,
            "itemtype": "method",
            "name": "clampScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec2"
                },
                {
                    "name": "min",
                    "description": "The minimum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 696,
            "description": "Performs a component wise min operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 716,
            "description": "Performs a component wise min operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "minScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 734,
            "description": "Performs a component wise max operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 754,
            "description": "Performs a component wise max operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "maxScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec2"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 772,
            "description": "Performs a component wise linear interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 791,
            "description": "Performs a component wise barycentric interpolation of the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "barycentric",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "c",
                    "description": "The third vector.",
                    "type": "Vec2"
                },
                {
                    "name": "t1",
                    "description": "The first interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "t2",
                    "description": "The second interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 812,
            "description": "Performs a component wise smooth interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "smooth",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec2"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec2"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec2",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec2.js",
            "line": 833,
            "description": "Tries to converts the given data to a vector",
            "static": 1,
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Vec2|Vec3|Vec4|Quat|Array|number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec2"
            },
            "class": "Vec2"
        },
        {
            "file": "src/vec3.js",
            "line": 14,
            "itemtype": "attribute",
            "name": "x",
            "type": "{Number}",
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "y",
            "type": "{Number}",
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 24,
            "itemtype": "attribute",
            "name": "z",
            "type": "{Number}",
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 35,
            "description": "Initializes the components of this vector with given values.",
            "chainable": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "value for X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "value for Y component",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "value for Z component",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "this vector for chaining",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 51,
            "description": "Initializes the components of this vector by taking the components from the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to read from",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 65,
            "description": "Initializes the components of this vector by taking values from the given array in successive order.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFromBuffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to read from",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The zero based index at which start reading the values",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 81,
            "description": "Creates a copy of this vector",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The cloned vector",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 90,
            "description": "Copies the components successively into the given array.",
            "chainable": 1,
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to copy into",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "Zero based index where to start writing in the array",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|Float32Array"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 106,
            "description": "Returns an array filled with the values of the components of this vector",
            "itemtype": "method",
            "name": "dump",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 115,
            "description": "Checks for component wise equality with given vector",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to compare with",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "true if components are equal, false otherwise",
                "type": "Boolean"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 125,
            "description": "Calculates the length of this vector",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length.",
                "type": "Number"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 137,
            "description": "Calculates the squared length of this vector",
            "itemtype": "method",
            "name": "lengthSquared",
            "return": {
                "description": "The squared length.",
                "type": "Number"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 149,
            "description": "Calculates the distance to the given vector",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "The distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 162,
            "description": "Calculates the squared distance to the given vector",
            "itemtype": "method",
            "name": "distanceSquared",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "The squared distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 175,
            "description": "Calculates the dot product with the given vector",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "The dot product.",
                "type": "Number"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 185,
            "description": "Calculates the cross product with another vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfCross",
            "params": [
                {
                    "name": "other",
                    "description": "The second vector.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "A new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 202,
            "description": "Normalizes this vector. Applies the result to this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNormalize",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 219,
            "description": "Inverts this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfInvert",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 232,
            "description": "Negates the components of this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNegate",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 245,
            "description": "Adds the given vector to `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAdd",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to add",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 259,
            "description": "Adds the given scalar to `this`",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAddScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 273,
            "description": "Subtracts the given from this vector from `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfSubtract",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to subtract.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 287,
            "description": "Subtracts the given scalar from `this`.",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "itemtype": "method",
            "name": "selfSubtractScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to subtract.",
                    "type": "Vec3"
                }
            ],
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 301,
            "description": "Multiplies `this` with the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiply",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to multiply.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 315,
            "description": "Multiplies `this` with the given scalar.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 329,
            "description": "Divides `this` by the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfDivide",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to divide with.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 343,
            "description": "Divides `this` by the given scalar.",
            "itemtype": "method",
            "name": "selfDivideScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to divide with.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 357,
            "description": "Multiplies `this` with the first vector and adds the second after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The vector to multiply.",
                    "type": "Vec3"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 372,
            "description": "Multiplies `this` with the first vector and adds the second scalar after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalarAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 387,
            "description": "Transforms `this` with the given quaternion.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformQuat",
            "params": [
                {
                    "name": "quat",
                    "description": "",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 426,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat4",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 445,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat3",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 463,
            "description": "Transforms `this` with the given matrix. The `z` component of `this` keeps untouched.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat2",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 481,
            "description": "Creates a new vector. The method should be called with three or no arguments. If less than three arguments are given\nthen some components of the resulting vector are going to be `undefined`.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "x",
                    "description": "The x component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "y",
                    "description": "The y component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z component",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 498,
            "description": "Creates a new vector with all components set to 0.",
            "static": 1,
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "A new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 508,
            "description": "Creates a new vector with all components set to 1.",
            "static": 1,
            "itemtype": "method",
            "name": "one",
            "return": {
                "description": "A new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 518,
            "description": "Normalizes the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "normalize",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to normalize.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 538,
            "description": "Calculates the cross product between two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "cross",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` argument or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 558,
            "description": "Inverts the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to invert.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 574,
            "description": "Negates this vector.",
            "static": 1,
            "itemtype": "method",
            "name": "negate",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to negate.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 590,
            "description": "Adds two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 607,
            "description": "Adds a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "addScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 624,
            "description": "Subtracts the second vector from the first.",
            "static": 1,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 641,
            "description": "Subtracts a scalar from each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "subtractScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 658,
            "description": "Multiplies two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 675,
            "description": "Multiplies a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 692,
            "description": "Divides the components of the first vector by the components of the second vector.",
            "static": 1,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 709,
            "description": "Divides the components of the first vector by the scalar.",
            "static": 1,
            "itemtype": "method",
            "name": "divideScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to use for division.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 727,
            "description": "Multiplies two vectors and adds the third vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec3"
                },
                {
                    "name": "vecB",
                    "description": "The vector to multiply.",
                    "type": "Vec3"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 745,
            "description": "Multiplies a vector with a scalar and adds another vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec3"
                },
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 763,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec3"
                },
                {
                    "name": "min",
                    "description": "Vector with the minimum component values.",
                    "type": "Vec3"
                },
                {
                    "name": "max",
                    "description": "Vector with the maximum component values.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 790,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max scalars.",
            "static": 1,
            "itemtype": "method",
            "name": "clampScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec3"
                },
                {
                    "name": "min",
                    "description": "The minimum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 811,
            "description": "Performs a component wise min operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 834,
            "description": "Performs a component wise min operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "minScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 854,
            "description": "Performs a component wise max operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 877,
            "description": "Performs a component wise max operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "maxScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec3"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 897,
            "description": "Performs a component wise linear interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 918,
            "description": "Performs a component wise barycentric interpolation of the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "barycentric",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "c",
                    "description": "The third vector.",
                    "type": "Vec3"
                },
                {
                    "name": "t1",
                    "description": "The first interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "t2",
                    "description": "The second interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 941,
            "description": "Performs a component wise smooth interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "smooth",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec3"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec3"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec3",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec3.js",
            "line": 964,
            "description": "Tries to converts the given data to a vector",
            "static": 1,
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Vec2|Vec3|Vec4|Quat|Array|number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec3"
            },
            "class": "Vec3"
        },
        {
            "file": "src/vec4.js",
            "line": 15,
            "itemtype": "attribute",
            "name": "x",
            "type": "{Number}",
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 20,
            "itemtype": "attribute",
            "name": "y",
            "type": "{Number}",
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 25,
            "itemtype": "attribute",
            "name": "z",
            "type": "{Number}",
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 30,
            "itemtype": "attribute",
            "name": "w",
            "type": "{Number}",
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 41,
            "description": "Initializes the components of this vector with given values.",
            "chainable": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "value for X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "value for Y component",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "value for Z component",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "value for W component",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "this vector for chaining",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 59,
            "description": "Initializes the components of this vector by taking the components from the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to read from",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 74,
            "description": "Initializes the components of this vector by taking values from the given array in successive order.",
            "chainable": 1,
            "itemtype": "method",
            "name": "initFromBuffer",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to read from",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The zero based index at which start reading the values",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 91,
            "description": "Creates a copy of this vector",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The cloned vector",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 100,
            "description": "Copies the components successively into the given array.",
            "chainable": 1,
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array to copy into",
                    "type": "Array|Float32Array"
                },
                {
                    "name": "offset",
                    "description": "Zero based index where to start writing in the array",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|Float32Array"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 117,
            "description": "Returns an array filled with the values of the components of this vector",
            "itemtype": "method",
            "name": "dump",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 126,
            "description": "Checks for component wise equality with given vector",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to compare with",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "true if components are equal, false otherwise",
                "type": "Boolean"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 136,
            "description": "Calculates the length of this vector",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length.",
                "type": "Number"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 149,
            "description": "Calculates the squared length of this vector",
            "itemtype": "method",
            "name": "lengthSquared",
            "return": {
                "description": "The squared length.",
                "type": "Number"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 162,
            "description": "Calculates the distance to the given vector",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "The distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 176,
            "description": "Calculates the squared distance to the given vector",
            "itemtype": "method",
            "name": "distanceSquared",
            "params": [
                {
                    "name": "other",
                    "description": "The distant vector",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "The squared distance between the vectors.",
                "type": "Number"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 190,
            "description": "Calculates the dot product with the given vector",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "The dot product.",
                "type": "Number"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 200,
            "description": "Normalizes this vector. Applies the result to this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNormalize",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 219,
            "description": "Inverts this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfInvert",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 233,
            "description": "Negates the components of this vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfNegate",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 247,
            "description": "Adds the given vector to `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAdd",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to add",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 262,
            "description": "Adds the given scalar to `this`",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfAddScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 277,
            "description": "Subtracts the given from this vector from `this`.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfSubtract",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to subtract.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 292,
            "description": "Subtracts the given scalar from `this`.",
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "itemtype": "method",
            "name": "selfSubtractScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to subtract.",
                    "type": "Vec4"
                }
            ],
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 307,
            "description": "Multiplies `this` with the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiply",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to multiply.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 322,
            "description": "Multiplies `this` with the given scalar.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 337,
            "description": "Divides `this` by the given vector.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfDivide",
            "params": [
                {
                    "name": "other",
                    "description": "The vector to divide with.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 352,
            "description": "Divides `this` by the given scalar.",
            "itemtype": "method",
            "name": "selfDivideScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar to divide with.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 367,
            "description": "Multiplies `this` with the first vector and adds the second after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The vector to multiply.",
                    "type": "Vec4"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 383,
            "description": "Multiplies `this` with the first vector and adds the second scalar after.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfMultiplyScalarAdd",
            "params": [
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 399,
            "description": "Transforms `this` with the given quaternion. The `w` component of `this` keeps untouched.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformQuat",
            "params": [
                {
                    "name": "quat",
                    "description": "",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 438,
            "description": "Transforms `this` with the given matrix.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat4",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat4"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 458,
            "description": "Transforms `this` with the given matrix. The `w` component of `this` keeps untouched.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat3",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 477,
            "description": "Transforms `this` with the given matrix. The `z` and `w` components of `this` keep untouched.",
            "chainable": 1,
            "itemtype": "method",
            "name": "selfTransformMat2",
            "params": [
                {
                    "name": "mat",
                    "description": "",
                    "type": "Mat3"
                }
            ],
            "return": {
                "description": "Reference to `this` for chaining.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 495,
            "description": "Creates a new vector. The method should be called with four or no arguments. If less than four arguments are given\nthen some components of the resulting vector are going to be `undefined`.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "x",
                    "description": "The x component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "y",
                    "description": "The y component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "z",
                    "description": "The z component",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "w",
                    "description": "The w component",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 513,
            "description": "Creates a new vector with all components set to 0.",
            "static": 1,
            "itemtype": "method",
            "name": "zero",
            "return": {
                "description": "A new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 523,
            "description": "Creates a new vector with all components set to 1.",
            "static": 1,
            "itemtype": "method",
            "name": "one",
            "return": {
                "description": "A new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 533,
            "description": "Normalizes the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "normalize",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to normalize.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 555,
            "description": "Inverts the given vector.",
            "static": 1,
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to invert.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 572,
            "description": "Negates this vector.",
            "static": 1,
            "itemtype": "method",
            "name": "negate",
            "params": [
                {
                    "name": "vec",
                    "description": "The vector to negate.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 589,
            "description": "Adds two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 607,
            "description": "Adds a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "addScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 625,
            "description": "Subtracts the second vector from the first.",
            "static": 1,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 643,
            "description": "Subtracts a scalar from each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "subtractScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 661,
            "description": "Multiplies two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 679,
            "description": "Multiplies a scalar to each component of a vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to add.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 697,
            "description": "Divides the components of the first vector by the components of the second vector.",
            "static": 1,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "vecA",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "vecB",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 715,
            "description": "Divides the components of the first vector by the scalar.",
            "static": 1,
            "itemtype": "method",
            "name": "divideScalar",
            "params": [
                {
                    "name": "vec",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar to use for division.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4"
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 734,
            "description": "Multiplies two vectors and adds the third vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec4"
                },
                {
                    "name": "vecB",
                    "description": "The vector to multiply.",
                    "type": "Vec4"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 753,
            "description": "Multiplies a vector with a scalar and adds another vector.",
            "static": 1,
            "itemtype": "method",
            "name": "multiplyAdd",
            "params": [
                {
                    "name": "vecA",
                    "description": "The vector to multiply.",
                    "type": "Vec4"
                },
                {
                    "name": "mul",
                    "description": "The scalar to multiply.",
                    "type": "Number"
                },
                {
                    "name": "add",
                    "description": "The vector to add on top of the multiplication.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 772,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec4"
                },
                {
                    "name": "min",
                    "description": "Vector with the minimum component values.",
                    "type": "Vec4"
                },
                {
                    "name": "max",
                    "description": "Vector with the maximum component values.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 803,
            "description": "Performs a component wise clamp operation on the the given vector by using the given min and max scalars.",
            "static": 1,
            "itemtype": "method",
            "name": "clampScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector to clamp.",
                    "type": "Vec4"
                },
                {
                    "name": "min",
                    "description": "The minimum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum scalar value.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 826,
            "description": "Performs a component wise min operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 852,
            "description": "Performs a component wise min operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "minScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 874,
            "description": "Performs a component wise max operation on the the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 900,
            "description": "Performs a component wise max operation on the the given vector and a scalar value.",
            "static": 1,
            "itemtype": "method",
            "name": "maxScalar",
            "params": [
                {
                    "name": "a",
                    "description": "The vector.",
                    "type": "Vec4"
                },
                {
                    "name": "scalar",
                    "description": "The scalar.",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 922,
            "description": "Performs a component wise linear interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 945,
            "description": "Performs a component wise barycentric interpolation of the given vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "barycentric",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "c",
                    "description": "The third vector.",
                    "type": "Vec4"
                },
                {
                    "name": "t1",
                    "description": "The first interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "t2",
                    "description": "The second interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 970,
            "description": "Performs a component wise smooth interpolation between the given two vectors.",
            "static": 1,
            "itemtype": "method",
            "name": "smooth",
            "params": [
                {
                    "name": "a",
                    "description": "The first vector.",
                    "type": "Vec4"
                },
                {
                    "name": "b",
                    "description": "The second vector.",
                    "type": "Vec4"
                },
                {
                    "name": "t",
                    "description": "The interpolation value. Assumed to be in range [0:1].",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "The vector to write to.",
                    "type": "Vec4",
                    "optional": true
                }
            ],
            "return": {
                "description": "The given `out` parameter or a new vector.",
                "type": "Vec4"
            },
            "class": "Vec4"
        },
        {
            "file": "src/vec4.js",
            "line": 995,
            "description": "Tries to converts the given data to a vector",
            "static": 1,
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Vec2|Vec3|Vec4|Quat|Array|number"
                }
            ],
            "return": {
                "description": "",
                "type": "Vec4"
            },
            "class": "Vec4"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/mat4.js:2569"
        },
        {
            "message": "Missing item type\nSome content here",
            "line": " src/mat4.js:1"
        }
    ]
}